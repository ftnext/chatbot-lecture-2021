.. _django_project_and_application:

プロジェクト／アプリケーション作成
========================================

Djangoのインストール
----------------------------------------

``ChatterBot`` をインストールした仮想環境を有効にします。
これまでにPython 3.7系で仮想環境を作っています（:ref:`chatbot_environment`）。

.. code-block:: shell

    $ cd ~/programming/chatbot
    $ source env/bin/activate
    $ pip install 'Django<4'

インストールしたことの確認

.. code-block:: shell

    $ django-admin --version
    3.2.9

脱線：Djangoのバージョンについて
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

https://www.djangoproject.com/download/ のSupported Versions

LTS＝long-term support（長期サポート）

- 2系のLTS（2.2.x）はサポートが2022年4月まで
- 3系のLTS（3.2.x）が登場しているので、 **DjangoでWebアプリを新規に作るなら3.2.x** がオススメ

8ヶ月おきに新しいバージョンが出ます（現在最新は3.2 → 4.0 → 4.1 → ...）

Djangoの用語：プロジェクトとアプリケーション
------------------------------------------------------------

登壇資料のスライド31〜36

.. TODO 埋め込めたものを眺めるわけではないので、画像として埋め込むことを検討する

.. raw:: html

    <iframe width="800" height="480" src="https://ftnext.github.io/2020_slides/pycon_shizu_Feb_django_intro/slide.html#/6/1" title="Djangoで始めるWeb開発の世界 〜Web開発を知らない方に贈る、Django Girls Tutorialとその周辺のクイックツアー〜"></iframe>

以下は、Djangoの用語としての意味です

プロジェクト
^^^^^^^^^^^^^^^^^^^^

* Djangoで作るWebアプリ全体の構成
* ディレクトリとその中に置かれるファイルを指す
* Webアプリに **プロジェクトは1つ**

アプリケーション
^^^^^^^^^^^^^^^^^^^^

* Webアプリの機能1つ1つ
* ディレクトリとその中に置かれるファイルを指す（プロジェクトとは置かれるファイルが異なります）
* Webアプリは **1つ以上のアプリケーション** からなる
* 例

  * チャットボットと会話する機能のアプリケーション
  * ユーザ管理（ログイン・ログアウトなど）機能のアプリケーション

配置イメージ
^^^^^^^^^^^^^^^^^^^^

.. code-block::

    ├── プロジェクト
    ├── アプリケーションA
    ├── アプリケーションB
    ├──  :

プロジェクト作成と初期設定
----------------------------------------

プロジェクト作成
^^^^^^^^^^^^^^^^^^^^

``djangochatbot`` という名前のプロジェクトを作ります。

.. code-block:: shell

    $ django-admin startproject djangochatbot

:command:`ls` で確認すると以下のディレクトリ構造になっていることが確認できます。

.. code-block::

    ~/programming/chatbot
    ├── djangochatbot  # <- このあと中を見ます
    ├── db.sqlite3  # <- これまでに実行した python my_chatbot.py でできた
    ├── env
    ├── greetings_ja.yml
    └── my_chatbot.py

.. code-block::

    djangochatbot
    ├── djangochatbot  # <- プロジェクト
    └── manage.py  # <- プロジェクト作成で作られます

:file:`~/programming/chatbot` 直下の :file:`djangochatbot` ディレクトリをリネームしましょう。
Webアプリのソースコードが置かれるので :file:`app` とします（プロジェクトのディレクトリと名前を変えることで説明しやすくなる都合もあります）。

.. code-block:: shell

    $ mv djangochatbot app

Djangoアプリのサーバを動かす
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

以降は :file:`app` ディレクトリで作業します。

.. code-block:: shell

    $ cd app

プロジェクト作成時にできた :file:`manage.py` はDjangoでのアプリケーション開発がしやすくなるサブコマンドを提供します。
``runserver`` サブコマンドで、Djangoアプリのサーバが起動します。

.. code-block:: shell
    
    $ python manage.py runserver

http://127.0.0.1:8000/ をブラウザで開き、ロケットが動いている画面が見えたら、サーバは問題なく動いています！

.. note:: Djangoアプリのサーバの停止は :kbd:`Control-C` です。

.. tip:: シェルを複数開き、1つで :command:`python manage.py runserver` しておくと開発しやすいです。
    Djangoアプリのサーバはファイルの変更を検知して自動で読み込み直します。
    ただし新規追加したファイルは読み込めない場合があるので、ファイルを新規追加したときは **サーバを止めて再度** ``runserver`` するのをオススメします。

:file:`settings.py` を変更
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. warning:: 手元のPC（＝ローカル環境）で動かすのを優先してプロジェクトを設定しています。
    Webアプリとして公開するには :file:`settings.py` で ``SECRET_KEY`` や ``STATIC_ROOT`` などの追加設定が必要です。

日本語の設定に変更します。
:file:`settings.py` には変数が定義されていて、指す値を変えることで設定を変更できます。

以下の2つの変数を探して、指す値を変更します。

- ``LANGUAGE_CODE``
- ``TIME_ZONE``

変更前
~~~~~~~~~~~~~~~~~~~~

.. code-block:: python
    :caption: app/djangochatbot/settings.py

    LANGUAGE_CODE = 'en-us'

    TIME_ZONE = 'UTC'

変更後
~~~~~~~~~~~~~~~~~~~~

.. literalinclude:: ../../app/djangochatbot/settings.py
    :language: python
    :caption: app/djangochatbot/settings.py
    :lines: 115-117

日本語・JSTに設定しました。

http://127.0.0.1:8000/ をブラウザで開くと、英語だった表示が日本語に変わっています。

アプリケーション作成とそれに伴う設定
----------------------------------------

アプリケーション作成
^^^^^^^^^^^^^^^^^^^^

``chat`` という名前のアプリケーションを作ります。
:file:`manage.py` の ``startapp`` サブコマンドを使います。

.. code-block:: shell

    $ python manage.py startapp chat

:command:`ls` で確認しましょう。

.. code-block::

    app
    ├── chat  # <- アプリケーション
    ├── djangochatbot
    └── manage.py

:file:`settings.py` を変更
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

変数 ``INSTALLED_APPS`` を探して、指す値を変更します。
これはリストを指していて、リストの要素は文字列です。

作った ``chat`` アプリケーションをリストに追加します。

.. literalinclude:: ../../app/djangochatbot/settings.py
    :language: python
    :caption: app/djangochatbot/settings.py
    :lines: 38-46,49
    :emphasize-lines: 9

発展：追加した文字列の意味
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

``chat`` アプリケーションの一部として作られた :file:`app/chat/apps.py` の中のクラスを指定しています。

.. literalinclude:: ../../app/chat/apps.py
    :language: python
    :caption: app/chat/apps.py
    :emphasize-lines: 4
